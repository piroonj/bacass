process {

  cpus = { check_max( 2, 'cpus' ) }
  memory = { check_max( 8.GB * task.attempt, 'memory' ) }
  time = { check_max( 2.h * task.attempt, 'time' ) }

  errorStrategy = { task.exitStatus in [1,143,137,104,134,139] ? 'retry' : 'finish' }
  maxRetries = 3
  maxErrors = '-1'

  withLabel:'small'{
      cpus = { check_max( 2, 'cpus' ) }
      memory = { check_max( 1.GB * task.attempt, 'memory' ) }
      time = { check_max( 1.h * task.attempt, 'time' ) }
  }

  withLabel:'medium' {
      cpus = { check_max( 8, 'cpus' ) }
      memory = { check_max( 8.GB * task.attempt, 'memory' ) }
      time = { check_max( 8.h * task.attempt, 'time' ) }
  }

  withLabel: 'medium_extramem'{
      cpus = { check_max( 8, 'cpus' ) }
      memory = { check_max( 16.GB * task.attempt, 'memory' ) }
      time = { check_max( 8.h * task.attempt, 'time' ) }
  }

  withLabel:'large'{
      cpus = { check_max( 32, 'cpus' ) }
      memory = { check_max( 350.GB * task.attempt, 'memory' ) }
      time = { check_max( 160.h * task.attempt, 'time' ) }
  }

//Container definitions, should be replaced once move to DSLv2 is done
  withName:'quast'{
      container = 'quay.io/biocontainers/quast:5.0.2--py37pl526hb5aa323_2'
  }

  withName:'adapter_trimming'{
      container = 'quay.io/biocontainers/porechop:0.2.4--py38hed8969a_1'
  }
  
  withName:'unicycler'{
      container = 'quay.io/biocontainers/unicycler:0.4.4--py38h8162308_3'
  }

  withName:'dfast'{
      container = 'quay.io/biocontainers/dfast:1.2.10--h8b12597_0'
  }

  withName:'medaka'{
      container = 'quay.io/biocontainers/medaka:1.1.2--py38hfcf0ad1_0'
  }
  
  withName:'pycoqc' {
      container = 'quay.io/biocontainers/pycoqc:2.5.0.23--py_0'
  }

  withName:'prokka'{
      container = 'quay.io/biocontainers/prokka:1.14.6--pl526_0'
  }

  withName:'nanopolish'{
      container = 'quay.io/biocontainers/mulled-v2-47609127678014b991aafdfe3c9141852f17fee7:11970b07a8fd8f9441c3235a979d527c7df52d34-0'
  }

  withName:'nanoplot' {
      container = 'quay.io/biocontainers/nanoplot:1.32.1--py_0'
  }

  

  params {
      // Defaults only, expecting to be overwritten
      max_memory = 64.GB
      max_cpus = 32
      max_time = 24.h
      igenomes_base = 's3://ngi-igenomes/igenomes/'
  }
}
